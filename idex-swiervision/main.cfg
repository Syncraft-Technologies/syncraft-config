

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos = False 	; use custom park coordinates for x,y [True/False]
variable_custom_park_x = 0.0   	; custom x position; value must be within your defined min and max of X
variable_custom_park_y = 0.0   	; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz = 15.0   	; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract = 0.0   	; the value to retract while PAUSE
variable_cancel_retract = 0.0   	; the value to retract while CANCEL_PRINT
variable_speed_retract = 35.0  	; retract speed in mm/s
variable_unretract = 0.0   	; the value to unretract while RESUME
variable_speed_unretract = 35.0  	; unretract speed in mm/s
variable_speed_hop = 15.0  	; z move speed in mm/s
variable_speed_move = 300.0 	; move speed in mm/s
variable_park_at_cancel = False 	; allow to move the toolhead to park while execute CANCEL_PRINT [True,False]
gcode = 

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	status_cancel
	TURN_OFF_HEATERS
	{% if printer["gcode_macro PRIME_ROUTINE"].primed == 1 %}
		G92 E0
		G1 E-5 F10000
		M400
		CANCEL_PRINT_BASE
		{% if dcvars.print_mode != 0 %}
			G28 X
		{% else %}
			_PARK_TOOL
		{% endif %}
		G28 Z
		G1 Y260 F24000
		read_materials
		FILAMENT_PULL
		M106 S0
	{% else %}
		CANCEL_PRINT_BASE
		G28 Z
		TURN_OFF_HEATERS
		M106 S0
		M204 S7000
		M84
		G4 P1000
	{% endif %}
	ACTIVATE_EXTRUDER EXTRUDER=extruder
	SET_DUAL_CARRIAGE CARRIAGE=0
	SET_GCODE_OFFSET X=0 Y=0 Z=0
	RESTORE_GCODE_STATE NAME=DEFAULT
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=afc VALUE=0
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=was_enabled VALUE=0
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=isprinting VALUE=0
	SET_GCODE_VARIABLE MACRO=PRIME_ROUTINE VARIABLE=primed VALUE=0
	SET_GCODE_VARIABLE MACRO=T0 VARIABLE=was_active VALUE=0
	SET_GCODE_VARIABLE MACRO=T0 VARIABLE=was_primed VALUE=0
	SET_GCODE_VARIABLE MACRO=T1 VARIABLE=was_active VALUE=0
	SET_GCODE_VARIABLE MACRO=T1 VARIABLE=was_primed VALUE=0
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=extruder1_in_use VALUE=0

[gcode_macro CANCEL_PRINT_CLOGGED]
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	status_cancel
	{% if printer["gcode_macro PRIME_ROUTINE"].primed == 1 %}
	G92 E0
	G1 E-80 F3200
	M400
	{% endif %}
	CANCEL_PRINT_BASE
	G28 Z
	TURN_OFF_HEATERS
	M106 S0
	M204 S7000
	M84
	
	SET_FAN_SPEED FAN=air_flow_fan SPEED=0.0
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=afc VALUE=0
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=was_enabled VALUE=0
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=isprinting VALUE=0
	SET_GCODE_VARIABLE MACRO=PRIME_ROUTINE VARIABLE=primed VALUE=0
	SET_GCODE_VARIABLE MACRO=T0 VARIABLE=was_active VALUE=0
	SET_GCODE_VARIABLE MACRO=T0 VARIABLE=was_primed VALUE=0
	SET_GCODE_VARIABLE MACRO=T1 VARIABLE=was_active VALUE=0
	SET_GCODE_VARIABLE MACRO=T1 VARIABLE=was_primed VALUE=0
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=extruder1_in_use VALUE=0

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% set temp = printer.extruder.target|float if printer.dual_carriage.carriage_0 == 'PRIMARY' else printer.extruder1.target|float %}
	{% set XPOS = printer.configfile.settings.stepper_x.position_endstop|float + 0.2 %}
	{% set X1POS = printer.configfile.settings.dual_carriage.position_max|float - 0.2 %}
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=target_temp VALUE={temp}
	SAVE_DUAL_CARRIAGE_STATE NAME=dual_carriage
	SAVE_GCODE_STATE NAME=M600_state
	PAUSE_BASE
	status_pause
	{% if dcvars.print_mode == 0 %}
	_PARK_TOOL
	{% else %}
	SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
	G1 X{X1POS} F{dcvars.feedrate}
	M400
	SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
	G1 X{XPOS} F{dcvars.feedrate}
	M400
	{% endif %}
	M204 S2000
	G1 Y300 F24000
	G92 E0
	G1 E-20 F3000
	{% if printer["gcode_macro M0"].pause_at_height == 1 %}
	M104 S0
	{% endif %}

[gcode_macro M0]
variable_pause_at_height = 0
gcode = 
	SET_GCODE_VARIABLE MACRO=M0 VARIABLE=pause_at_height VALUE=1
	M400
	PAUSE

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% set afcvars = printer["gcode_macro AFC_VARS"] %}
	M104 T{dcvars.active_carriage} S{afcvars.target_temp}
	{% if dcvars.print_mode != 0 %}
	_SYNC_EXTRUDERS_TEMP
	{% endif %}
	M109 T{dcvars.active_carriage} S{afcvars.target_temp}
	{% if printer['gcode_macro AFC_VARS'].afc == 1 %}
	{action_respond_info("afc == 1, entered!")}
	M109 T{dcvars.active_carriage} S{afcvars.target_temp}
	G92 E0
	G1 E780 F3250
	G1 E820 F500
	G1 E900 F70
	G92 E0
	G1 E-20 F3000
	{% if dcvars.active_carriage == 0 %}
	SET_GCODE_VARIABLE MACRO=T0 VARIABLE=was_primed VALUE=1
	{% else %}
	SET_GCODE_VARIABLE MACRO=T1 VARIABLE=was_primed VALUE=1
	{% endif %}
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=afc VALUE=0
	RESTORE_GCODE_STATE NAME=runout_state MOVE=1
	RESTORE_DUAL_CARRIAGE_STATE NAME=dual_carriage MOVE=1
	{% elif printer["gcode_macro M0"].pause_at_height == 1 %}
	SET_GCODE_VARIABLE MACRO=M0 VARIABLE=pause_at_height VALUE=0
	{% if dcvars.print_mode == 1 %}
	RESTORE_GCODE_STATE NAME=M600_state MOVE=1
	RESTORE_DUAL_CARRIAGE_STATE NAME=dual_carriage MOVE=1
	SET_DUAL_CARRIAGE CARRIAGE=1 MODE=COPY
	SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder
	{% elif dcvars.print_mode == 2 %}
	RESTORE_GCODE_STATE NAME=M600_state MOVE=1
	RESTORE_DUAL_CARRIAGE_STATE NAME=dual_carriage MOVE=1
	SET_DUAL_CARRIAGE CARRIAGE=1 MODE=MIRROR
	SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder
	{% endif %}
	{% else %}
	RESTORE_GCODE_STATE NAME=M600_state MOVE=1
	RESTORE_DUAL_CARRIAGE_STATE NAME=dual_carriage MOVE=1
	{% endif %}
	status_printing
	RESUME_BASE VELOCITY=300

[homing_override]
axes: xyz
gcode:
	{% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
	{% if home_all %}
		# SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
		# SET_STEPPER_ENABLE STEPPER=dual_carriage ENABLE=1
		# SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
		# SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=1
		# G4 P300
    	G28 Z
		G28 X
		G28 Y
		# _HOME_X
		# _HOME_Y
	{% endif %}

	#{% if home_all or 'X' in params %}
	{% if 'X' in params %}
		# SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
		# G4 P300
    	G28 X
  	{% endif %}
	
	#{% if home_all or 'Y' in params %}
  	{% if 'Y' in params %}
		# SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
		# G4 P300
		G28 Y
    	# _HOME_Y
  	{% endif %}

	#{% if home_all or 'Z' in params %}
  	{% if 'Z' in params %}
		# SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=1
		# G4 P300
    	G28 Z
    	#G1 Z10
  	{% endif %}
	{% if printer.toolhead.extruder == 'extruder' %}
		SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
	{% else %}
		SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
	{% endif %}

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2240 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2240 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.5 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    #G91
    #G1 X1 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P2000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2240 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2240 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.55 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    #G91
    #G1 Y1 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[idle_timeout]
timeout = 3600
gcode = 
	{% set svv = printer.save_variables.variables %}
	{% if printer.pause_resume.is_paused %}
	M118 Bypassed Timeout
	M117 Bypassed Timeout
	{% else %}
	M118 Timeout Reached
	M117 Timeout Reached
	TURN_OFF_HEATERS
	M84
	{% endif %}

[gcode_macro START_GCODE]
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% if dcvars.extruders_enabled == 2 %}
	M104 T0 S150
	_SYNC_EXTRUDERS_TEMP
	M109 S150
	{% endif %}
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=isprinting VALUE=1
	UPDATE_DELAYED_GCODE ID=report_temp DURATION=0
	BED_MESH_CLEAR
	G92 E0
	ACTIVATE_EXTRUDER EXTRUDER=extruder
	SET_DUAL_CARRIAGE CARRIAGE=0
	SET_GCODE_OFFSET X=0 Y=0 Z=0
	status_probing
	Z_TILT_ADJUST
	M400
	Z_TILT_ADJUST
	M400
	{% if dcvars.extruders_enabled == 2 or dcvars.print_mode != 0 %}
	IDEX_NOZZLE_CHECK
	M400
	_PARK_TOOL
	{% endif %}
	{% if dcvars.print_mode == 0 %}
	BED_MESH_CALIBRATE
	_PARK_TOOL
	{% if printer['gcode_macro T1'].was_active == 1 %}
	M400
	left_idle
	ACTIVATE_EXTRUDER EXTRUDER=extruder1
	SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
	_PARK_TOOL
	SET_GCODE_OFFSET X={dcvars.offset_x} Y={dcvars.offset_y} Z={dcvars.offset_z} #MOVE=1
	{% endif %}
	{% endif %}
	{% if dcvars.print_mode != 0 %}
	_SYNC_EXTRUDERS_TEMP
	{% endif %}
	G1 Y260 F18000
	CHAMBER_FLOW

# [gcode_macro END_GCODE]
# gcode = 
# 	{% set dcvars = printer["gcode_macro DC_VARS"] %}
# 	TURN_OFF_HEATERS
# 	print_success
# 	read_materials
# 	G92 E0
# 	G1 E-5 F10000
# 	{% if dcvars.print_mode != 0 %}
# 	G28 X
# 	{% else %}
# 	_PARK_TOOL
# 	{% endif %}
# 	G28 Z
# 	G1 Y260 F24000
# 	M400
# 	FILAMENT_PULL
# 	M106 S0
# 	M106 S0
# 	M204 S7000
# 	M84
# 	ACTIVATE_EXTRUDER EXTRUDER=extruder
# 	SET_DUAL_CARRIAGE CARRIAGE=0
# 	SET_GCODE_OFFSET X=0 Y=0 Z=0
# 	RESTORE_GCODE_STATE NAME=DEFAULT
# 	UPDATE_DELAYED_GCODE ID=report_temp DURATION=5
# 	UPDATE_DELAYED_GCODE ID=_SET_CHAMBER_FAN DURATION=60
# 	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=afc VALUE=0
# 	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=was_enabled VALUE=0
# 	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=isprinting VALUE=0
# 	SET_GCODE_VARIABLE MACRO=PRIME_ROUTINE VARIABLE=primed VALUE=0
# 	SET_GCODE_VARIABLE MACRO=T0 VARIABLE=was_active VALUE=0
# 	SET_GCODE_VARIABLE MACRO=T0 VARIABLE=was_primed VALUE=0
# 	SET_GCODE_VARIABLE MACRO=T1 VARIABLE=was_active VALUE=0
# 	SET_GCODE_VARIABLE MACRO=T1 VARIABLE=was_primed VALUE=0
# 	SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1
# 	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=extruder1_in_use VALUE=0
# 	M204 S7000

[gcode_macro END_GCODE]
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	TURN_OFF_HEATERS
	print_success
	read_materials
	G92 E0
	G1 E-5 F10000
	{% if dcvars.print_mode != 0 %}
		G28 X
	{% else %}
		_PARK_TOOL
	{% endif %}
	G28 Z
	G1 Y260 F24000
	M400
	FILAMENT_PULL
	M106 S0
	M106 S0
	M204 S7000
	M84
	ACTIVATE_EXTRUDER EXTRUDER=extruder
	SET_DUAL_CARRIAGE CARRIAGE=0
	SET_GCODE_OFFSET X=0 Y=0 Z=0
	RESTORE_GCODE_STATE NAME=DEFAULT
	UPDATE_DELAYED_GCODE ID=report_temp DURATION=5
	UPDATE_DELAYED_GCODE ID=_SET_CHAMBER_FAN DURATION=60
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=afc VALUE=0
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=was_enabled VALUE=0
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=isprinting VALUE=0
	SET_GCODE_VARIABLE MACRO=PRIME_ROUTINE VARIABLE=primed VALUE=0
	SET_GCODE_VARIABLE MACRO=T0 VARIABLE=was_active VALUE=0
	SET_GCODE_VARIABLE MACRO=T0 VARIABLE=was_primed VALUE=0
	SET_GCODE_VARIABLE MACRO=T1 VARIABLE=was_active VALUE=0
	SET_GCODE_VARIABLE MACRO=T1 VARIABLE=was_primed VALUE=0
	SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=extruder1_in_use VALUE=0
	M204 S7000

[gcode_macro FILAMENT_PULL]
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% set readmaterialsvars = printer["gcode_macro read_materials"] %}
	{% set cool_e0 = readmaterialsvars.material_0_cooldown %}
	{% set cool_e1 = readmaterialsvars.material_1_cooldown %}
	{% set lastextruder = 0 if printer.dual_carriage.carriage_0 == 'PRIMARY' else 1 %}
	{% set longretract = -75 %}
	{% set shortretract = -50 %}
	{% if dcvars.print_mode != 0 %}
	SET_DUAL_CARRIAGE CARRIAGE=1 MODE=MIRROR
	SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder
	G1 E-22 F3000
	TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={cool_e0}
	M400
	G1 E{longretract} F3200
	SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1
	_NOZZLE_SCRUB
	{% elif dcvars.extruders_enabled == 2 %}
	M400
	{% if cool_e0 >= cool_e1 %}
	ACTIVATE_EXTRUDER EXTRUDER=extruder
	SET_DUAL_CARRIAGE CARRIAGE=0
	TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={cool_e0}
	{% if lastextruder == 0 %}
	G1 E{longretract} F3200
	{% else %}
	G1 E{shortretract} F3200
	{% endif %}
	_NOZZLE_SCRUB
	M400
	ACTIVATE_EXTRUDER EXTRUDER=extruder1
	SET_DUAL_CARRIAGE CARRIAGE=1
	TEMPERATURE_WAIT SENSOR=extruder1 MAXIMUM={cool_e1}
	{% if lastextruder == 1 %}
	G1 E{longretract} F3200
	{% else %}
	G1 E{shortretract} F3200
	{% endif %}
	_NOZZLE_SCRUB
	{% else %}
	ACTIVATE_EXTRUDER EXTRUDER=extruder1
	SET_DUAL_CARRIAGE CARRIAGE=1
	TEMPERATURE_WAIT SENSOR=extruder1 MAXIMUM={cool_e1}
	{% if lastextruder == 1 %}
	G1 E{longretract} F3200
	{% else %}
	G1 E{shortretract} F3200
	{% endif %}
	_NOZZLE_SCRUB
	M400
	ACTIVATE_EXTRUDER EXTRUDER=extruder
	SET_DUAL_CARRIAGE CARRIAGE=0
	TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={cool_e0}
	{% if lastextruder == 0 %}
	G1 E{longretract} F3200
	{% else %}
	G1 E{shortretract} F3200
	{% endif %}
	_NOZZLE_SCRUB
	{% endif %}
	{% else %}
	{% if printer.dual_carriage.carriage_0 == 'PRIMARY' %}
	TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={cool_e0}
	G1 E{longretract} F3200
	M400
	_NOZZLE_SCRUB
	{% else %}
	TEMPERATURE_WAIT SENSOR=extruder1 MAXIMUM={cool_e1}
	G1 E{longretract} F3200
	M400
	_NOZZLE_SCRUB
	{% endif %}
	{% endif %}
	G1 Y150 F30000

[gcode_macro PRIME_ROUTINE]
variable_primed = 0
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% if dcvars.print_mode != 0 %}
	_SYNC_EXTRUDERS_TEMP
	SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder
	{% endif %}
	G92 E0
	G1 E60 F750
	G1 E90 F70
	G92 E0
	G1 E-3 F2500
	M400
	SET_GCODE_VARIABLE MACRO=PRIME_ROUTINE VARIABLE=primed VALUE=1
	{% if dcvars.print_mode != 0 %}
	SET_GCODE_VARIABLE MACRO=T0 VARIABLE=was_primed VALUE=1
	SET_GCODE_VARIABLE MACRO=T1 VARIABLE=was_primed VALUE=1
	{% elif printer.dual_carriage.carriage_0 == 'PRIMARY' %}
	SET_GCODE_VARIABLE MACRO=T0 VARIABLE=was_primed VALUE=1
	{% else %}
	SET_GCODE_VARIABLE MACRO=T1 VARIABLE=was_primed VALUE=1
	{% endif %}
	G4 P2500
	{% if dcvars.print_mode != 0 %}
	SET_DUAL_CARRIAGE CARRIAGE=1 MODE=MIRROR
	{% endif %}
	_NOZZLE_SCRUB
	{% if dcvars.print_mode == 1 %}
	ACTIVATE_COPY_MODE
	{% elif dcvars.print_mode == 2 %}
	ACTIVATE_MIRROR_MODE
	{%endif%}
	status_printing
	G1 E0 F900

[gcode_macro PURGE_NOZZLE]
gcode = 
	{% set X = params.X|default(280)|float %}
	{% set Y = params.Y|default(303)|float %}
	{% set E = params.E|default(100)|float %}
	G1 E15 F100
	G92 E0
	G1 E-20 F3000

[gcode_macro PROBE_CALIBRATE]
rename_existing = PROBE_CALIBRATE_BASE
gcode = 
	{action_respond_info("entrou")}
	{% set X = params.X|default(150)|float %}
	{% set Y = params.Y|default(150)|float %}
	{% set Z = params.Z|default(5)|float %}
	{% set E = params.E|default(90)|float %}
	{% set T = params.T|default(235)|float %}
	status_probing
	G28
	Z_TILT_ADJUST
	G1 Z{Z} F6000
	G1 X{X} Y{Y} F18000
	PROBE_CALIBRATE_BASE
	{action_respond_info(Z|string)}

[gcode_macro EXTRUDER_SCREW_PLACEMENT]
gcode = 
	{action_respond_info("entrou no EXTRUDER_SCREW_PLACEMENT")}
	G28
	T1
	G90
	G1 Y150 X50 F24000
	RESPOND_FINISH_MACRO M="EXTRUDER_SCREW_PLACEMENT"

[gcode_macro PROBE_CALIBRATE_AUTOMATIC]
gcode = 
	{action_respond_info("entrou no PROBE_CALIBRATE_AUTOMATIC")}
	{% set X = params.X|default(150)|float %}
	{% set Y = params.Y|default(150)|float %}
	{% set O = params.O|default(0.0)|float %}
	status_probing
	G28
	ACTIVATE_EXTRUDER EXTRUDER=extruder
	SET_DUAL_CARRIAGE CARRIAGE=0
	SET_GCODE_OFFSET X=0 Y=0 Z=0
	SAVE_VARIABLE VARIABLE=active_carriage VALUE=0
	Z_TILT_ADJUST
	Z_TILT_ADJUST
	G1 X{X} Y{Y} F24000
	G1 Z5 F1000
	PROBE
	G1 Z5 F1000
	_PARK_TOOL
	ACTIVATE_EXTRUDER EXTRUDER=extruder1
	SET_DUAL_CARRIAGE CARRIAGE=1
	SAVE_VARIABLE VARIABLE=active_carriage VALUE=1
	G1 X{X} Y{Y} F24000
	G1 Z0 F800  # offset
	RESPOND_FINISH_MACRO M="PROBE_CALIBRATE_AUTOMATIC"

[gcode_macro CALIBRATE_Z_ENDSTOP]
gcode = 
	{% set X = params.X|default(150)|float %}
	{% set Y = params.Y|default(150)|float %}
	{% set Z = params.Z|default(5)|float %}
	G28
	Z_TILT_ADJUST
	G1 Z{Z} F6000
	G1 X{X} Y{Y} F18000
	Z_ENDSTOP_CALIBRATE

[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing = SET_HEATER_TEMPERATURE_BASE
gcode = 
	{% set TARGET = params.TARGET|default(off)|int %}
	{% set HEATER = params.HEATER|default('none')|string %}
	{% set nozzle_max = printer.configfile.config.extruder.max_temp|int %}
	{% set nozzle_limiter = nozzle_max-10|int %}
	{% if printer.extruder.target != 0 or printer.extruder1.target != 0 %}
	{% if TARGET >= nozzle_limiter %}
	SET_HEATER_TEMPERATURE_BASE HEATER={HEATER} TARGET={nozzle_limiter}
	{% else %}
	SET_HEATER_TEMPERATURE_BASE HEATER={HEATER} TARGET={TARGET}
	{% endif %}
	{% if HEATER == 'extruder' %}
	status_heating_left
	{% elif HEATER == 'extruder1' %}
	status_heating_right
	{% endif %}
	{% else %}
	SET_HEATER_TEMPERATURE_BASE HEATER={HEATER} TARGET={TARGET}
	status_cooling_left
	status_cooling_right
	progress_bar_idle
	{% endif %}

[gcode_macro TURN_OFF_HEATERS]
rename_existing = TURN_OFF_HEATERS_BASE
gcode = 
	{% if printer.idle_timeout.state == "Printing" %}
	status_cooling_left
	status_cooling_right
	{% else %}
	status_cooling_left
	status_cooling_right
	progress_bar_idle
	{% endif %}
	TURN_OFF_HEATERS_BASE

[gcode_macro CHAMBER_FLOW]
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% set afcvars = printer["gcode_macro AFC_VARS"] %}
	{% set min_power = 0.3 %} # Range: 0.0 to 1.0 (0% - 100%)
	{% if afcvars.isprinting == 1 %}
	{% if printer['temperature_sensor chamber_fan'].temperature < dcvars.mat_temp %}
	SET_FAN_SPEED FAN=air_flow_fan SPEED={min_power}
	{% elif printer['temperature_sensor chamber_fan'].temperature > dcvars.mat_temp + 1.0 and printer['temperature_sensor chamber_fan'].temperature < dcvars.mat_temp + 2.0 %}
	SET_FAN_SPEED FAN=air_flow_fan SPEED={min_power + 0.175}
	{% elif printer['temperature_sensor chamber_fan'].temperature > dcvars.mat_temp + 2.0 and printer['temperature_sensor chamber_fan'].temperature < dcvars.mat_temp + 3.0 %}
	SET_FAN_SPEED FAN=air_flow_fan SPEED={min_power + 0.350}
	{% elif printer['temperature_sensor chamber_fan'].temperature > dcvars.mat_temp + 3.0 and printer['temperature_sensor chamber_fan'].temperature < dcvars.mat_temp + 4.0 %}
	SET_FAN_SPEED FAN=air_flow_fan SPEED={min_power + 0.525}
	{% elif printer['temperature_sensor chamber_fan'].temperature > dcvars.mat_temp + 4.0 %}
	SET_FAN_SPEED FAN=air_flow_fan SPEED={min_power + 0.700}
	{% endif %}
	UPDATE_DELAYED_GCODE ID=_SET_CHAMBER_FAN DURATION=30
	{% else %}
	UPDATE_DELAYED_GCODE ID=_SET_CHAMBER_FAN DURATION=0
	SET_FAN_SPEED FAN=air_flow_fan SPEED=0.0
	{% endif %}

[delayed_gcode _SET_CHAMBER_FAN]
gcode = 
	CHAMBER_FLOW

[gcode_macro DUMPX2]
gcode = 
	DUMP_TMC STEPPER=dual_carriage

[gcode_macro M900]
gcode = 
	{% set svv = printer.save_variables.variables %}
	{% set S = params.S|default(0)|float %}
	{% set P = params.P|default(0)|float %}
	{% if P == 0.8 and S >= 100 %}
	SET_PRESSURE_ADVANCE ADVANCE=0.1 EXTRUDER={printer.toolhead.extruder}   #{svv.currentextruder}
	{% else %}
	SET_PRESSURE_ADVANCE ADVANCE=0.1 EXTRUDER={printer.toolhead.extruder}
	{% endif %}

[led_effect set_nozzle_leds2]
leds = 
	neopixel:heater_leds2
autostart = true
frame_rate = 24
layers = 
	static 0 0 top (1.0, 1.0, 1.0)

[led_effect left_tool_idle]
leds = 
	neopixel:heater_leds
autostart = false
frame_rate = 24
layers = 
	breathing 10 0 subtract (0.3, 0.3, 0.65)
	static 0 0 top (0.3 , 0.75, 1)

[led_effect left_tool_heating]
leds = 
	neopixel:heater_leds
autostart = true
frame_rate = 24
heater = extruder
layers = 
	heater 35 0 add (0,0,0),(1,1,1)
	breathing 3 0 top (1, 0.18, 0.0)

[led_effect left_tool_printing]
leds = 
	neopixel:heater_leds
autostart = false
frame_rate = 24
layers = 
	static 0 0 top (1, 1, 1)

[led_effect left_tool_cooling]
leds = 
	neopixel:heater_leds
autostart = false
frame_rate = 24
heater = extruder
layers = 
	heater 50 0 add (0,0,0),(1,1,1)
	breathing 15 0 top (1, 0.3, 0.0)

[led_effect right_tool_idle]
leds = 
	neopixel:heater_leds2
autostart = false
frame_rate = 24
layers = 
	breathing 10 0 subtract (0.3, 0.3, 0.65)
	static 0 0 top (0.3 , 0.75, 1)

[led_effect right_tool_heating]
leds = 
	neopixel:heater_leds2
autostart = true
frame_rate = 24
heater = extruder1
layers = 
	heater 35 0 add (0,0,0),(1,1,1)
	breathing 3 0 top (1, 0.18, 0.0)

[led_effect right_tool_printing]
leds = 
	neopixel:heater_leds2
autostart = false
frame_rate = 24
layers = 
	static 0 0 top (1, 1, 1)

[led_effect right_tool_cooling]
leds = 
	neopixel:heater_leds2
autostart = false
frame_rate = 24
heater = extruder1
layers = 
	heater 50 0 add (0,0,0),(1,1,1)
	breathing 15 0 top (1, 0.3, 0.0)

[gcode_macro status_probing]
gcode = 
	SET_LED_EFFECT EFFECT=probing REPLACE=1 FADETIME=1.5

[gcode_macro set_left_tool]
gcode = 
	SET_LED_EFFECT EFFECT=set_nozzle_leds REPLACE=1 FADETIME=1.5

[gcode_macro set_right_tool]
gcode = 
	SET_LED_EFFECT EFFECT=set_nozzle_leds2 REPLACE=1 FADETIME=1.5

[gcode_macro status_heating_left]
gcode = 
	SET_LED_EFFECT EFFECT=left_tool_heating REPLACE=1 FADETIME=1.5

[gcode_macro status_heating_right]
gcode = 
	SET_LED_EFFECT EFFECT=right_tool_heating REPLACE=1 FADETIME=1.5

[gcode_macro status_cooling_left]
gcode = 
	SET_LED_EFFECT EFFECT=left_tool_cooling REPLACE=1 FADETIME=1.5

[gcode_macro status_cooling_right]
gcode = 
	SET_LED_EFFECT EFFECT=right_tool_cooling REPLACE=1 FADETIME=1.5

[gcode_macro left_idle]
gcode = 
	SET_LED_EFFECT EFFECT=left_tool_idle REPLACE=1 FADETIME=1.5

[gcode_macro left_printing]
gcode = 
	SET_LED_EFFECT EFFECT=left_tool_printing REPLACE=1 FADETIME=1.5

[gcode_macro right_idle]
gcode = 
	SET_LED_EFFECT EFFECT=right_tool_idle REPLACE=1 FADETIME=1.5

[gcode_macro right_printing]
gcode = 
	SET_LED_EFFECT EFFECT=right_tool_printing REPLACE=1 FADETIME=1.5

[gcode_macro update_leds]
gcode = 
	{% if printer.extruder.target < 10 %}
	{% if printer.extruder.temperature > 50.0 %}
	status_cooling_left
	{% else %}
	set_left_tool
	{% endif %}
	{% endif %}
	{% if printer.extruder1.target < 10 %}
	{% if printer.extruder1.temperature > 50.0 %}
	status_cooling_right
	{% else %}
	set_right_tool
	{% endif %}
	{% endif %}

[gcode_macro set_temperature_layer]
gcode = 
	{% set L0 = params.L0|default(0)|float %}
	{% set L1 = params.L1|default(0)|float %}
	{% set svv = printer.save_variables.variables %}
	
	{% if printer.dual_carriage.carriage_0 == 'PRIMARY' %}
	{action_respond_info(L0|string)}
	M109 T0 S{L0}
	{% else %}
	{action_respond_info(L1|string)}
	M109 T1 S{L1}
	{% endif %}

[gcode_macro RESPOND_FINISH_MACRO]
gcode = 
	{% set macro_name = params.M|default("NONE") %}
	{action_respond_info("finalizou o " + macro_name)}

[gcode_macro ACTION_RESPOND_INFO]
gcode = 
	{% set message = params.M|default("None") %}
	{action_respond_info(message)}

[gcode_macro SILENT_MODE]
gcode:
	{% set state = params.S|default(0)|int %}
	{% if state == 1 %}
		SET_VELOCITY_LIMIT VELOCITY=200
		SET_TMC_FIELD STEPPER=stepper_x FIELD=TPWMTHRS VALUE=35
		SET_TMC_FIELD STEPPER=dual_carriage FIELD=TPWMTHRS VALUE=35
		SET_TMC_FIELD STEPPER=stepper_y FIELD=TPWMTHRS VALUE=35
		{action_respond_info("Silent Mode On")}
	{% else %}
		SET_VELOCITY_LIMIT VELOCITY=500
		SET_TMC_FIELD STEPPER=stepper_x FIELD=TPWMTHRS VALUE=1048575
		SET_TMC_FIELD STEPPER=dual_carriage FIELD=TPWMTHRS VALUE=1048575
		SET_TMC_FIELD STEPPER=stepper_y FIELD=TPWMTHRS VALUE=1048575
		{action_respond_info("Silent Mode Off")}
	{% endif %}

[bed_screws]
screw1 = 21,20
screw1_name = Front left screw
screw2 = 279,20
screw2_name = Front right screw
screw3 = 157.5,285
screw3_name = Rear center screw
speed = 250

[axis_twist_compensation]
speed = 350
calibrate_start_x = 20
calibrate_end_x = 280
calibrate_y = 157.5

[gcode_macro endstop_phase_calibration]
gcode:
    T0
    G4 P2500
    G28
    M400
    ENDSTOP_PHASE_CALIBRATE
    M400
    SET_DUAL_CARRIAGE CARRIAGE=0
    G1 X115.65 Y120.34 Z220.58 F12000
    G4 P1000
    SET_DUAL_CARRIAGE CARRIAGE=1
    G1 X220.42
    M400
    SET_DUAL_CARRIAGE CARRIAGE=0
    G28
    M400
    ENDSTOP_PHASE_CALIBRATE
    M400
    G1 X89.65 Y145.59 Z320.58 F12000
    G4 P1000
    SET_DUAL_CARRIAGE CARRIAGE=1
    G1 X250.12
    M400
    SET_DUAL_CARRIAGE CARRIAGE=0
    G28
    M400
    ENDSTOP_PHASE_CALIBRATE
    M400
    G1 X145.65 Y220.78 Z184.18 F12000
    G4 P1000
    SET_DUAL_CARRIAGE CARRIAGE=1
    G1 X195.27
    M400
    SET_DUAL_CARRIAGE CARRIAGE=0
    G28
    M400
    ENDSTOP_PHASE_CALIBRATE
    M400
    G1 X165.65 Y287.34 Z137.58 F12000
    G4 P1000
    SET_DUAL_CARRIAGE CARRIAGE=1
    G1 X272.42
    M400
    SET_DUAL_CARRIAGE CARRIAGE=0
    G28
    M400
    ENDSTOP_PHASE_CALIBRATE
    M400
    G1 X42.55 Y263.34 Z312.5 F12000
    G4 P2000
    SET_DUAL_CARRIAGE CARRIAGE=1
    G1 X152.47
    M400
    SET_DUAL_CARRIAGE CARRIAGE=0
    G28
    M400
    ENDSTOP_PHASE_CALIBRATE
    M400
    ENDSTOP_PHASE_CALIBRATE STEPPER=stepper_x
    M400
    ENDSTOP_PHASE_CALIBRATE STEPPER=dual_carriage
    M400
    ENDSTOP_PHASE_CALIBRATE STEPPER=stepper_y
    M400
    ENDSTOP_PHASE_CALIBRATE STEPPER=stepper_z
    G4 P2000
    SAVE_CONFIG

[z_tilt]
z_positions = 
	-59,150
	362,150
points = 
	18.5,150
	278.5,150
speed = 300
horizontal_move_z = 5

[gcode_macro AFC_VARS]
variable_break_temp = 100
variable_afc = 0
variable_target_temp = 0
variable_isprinting = 0 # Troca automática desativada para a idex por enquanto
variable_was_enabled = 0
variable_active_extruder = 0
gcode = 

[gcode_macro BREAK_CLEAN]
gcode = 
	{% set P = params.P|default(0)|int %}
	{% set minbreak = 120 %}
	{% if P <= minbreak %}
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=break_temp VALUE={minbreak}
	{% else %}
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=break_temp VALUE={P}
	{% endif %}

[filament_switch_sensor spool_one]
switch_pin = PC1
pause_on_runout = false
event_delay = 5
pause_delay = 2
runout_gcode = 
	{% set svv = printer.save_variables.variables %}
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% set afcvars = printer["gcode_macro AFC_VARS"] %}
	{% set temp = printer.extruder.target|int %}
	{% if afcvars.isprinting == 1 and dcvars.active_carriage == 0 and not printer.pause_resume.is_paused %}
	SAVE_GCODE_STATE NAME=runout_state
	
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=target_temp VALUE={temp}
	PAUSE
	G1 E-25 F3000
	M104 S{afcvars.break_temp}
	TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={afcvars.break_temp}
	G92 E0
	G1 E-940 F3000
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=afc VALUE=1
	{% endif %}
insert_gcode = 
	{% set afcvars = printer["gcode_macro AFC_VARS"] %}
	{% set svv = printer.save_variables.variables %}
	
	{% if afcvars.isprinting == 0 or printer.pause_resume.is_paused %}
	ACTIVATE_EXTRUDER EXTRUDER=extruder
	M82
	G92 E0
	G4 P2200
	G1 E50 F1000
	M400
	G92 E0
	{% if afcvars.isprinting == 0 %}
	SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
	{% endif %}
	{% if svv.active_carriage == 1 %}
	ACTIVATE_EXTRUDER EXTRUDER=extruder1
	SET_DUAL_CARRIAGE CARRIAGE=1
	{% endif %}
	{% endif %}

[filament_switch_sensor spool_two]
switch_pin = PC2
pause_on_runout = false
event_delay = 5
pause_delay = 2
runout_gcode = 
	{% set svv = printer.save_variables.variables %}
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% set afcvars = printer["gcode_macro AFC_VARS"] %}
	{% set temp = printer.extruder.target|int %}
	
	{% if afcvars.isprinting == 1 and dcvars.active_carriage == 1 and not printer.pause_resume.is_paused %}
	SAVE_GCODE_STATE NAME=runout_state
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=target_temp VALUE={temp}
	PAUSE
	G1 E-25 F3000
	M104 S{afcvars.break_temp}
	TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={afcvars.break_temp}
	G92 E0
	G1 E-940 F3000
	SET_GCODE_VARIABLE MACRO=AFC_VARS VARIABLE=afc VALUE=1
	{% endif %}
insert_gcode = 
	{% set afcvars = printer["gcode_macro AFC_VARS"] %}
	{% set svv = printer.save_variables.variables %}
	
	{% if afcvars.isprinting == 0 or printer.pause_resume.is_paused %}
	ACTIVATE_EXTRUDER EXTRUDER=extruder1
	M82
	G92 E0
	G4 P2200
	G1 E50 F1000
	M400
	G92 E0
	{% if afcvars.isprinting == 0 %}
	SET_STEPPER_ENABLE STEPPER=extruder1 ENABLE=0
	{% endif %}
	{% if svv.active_carriage == 0 %}
	ACTIVATE_EXTRUDER EXTRUDER=extruder
	SET_DUAL_CARRIAGE CARRIAGE=0
	{% endif %}
	{% endif %}



[gcode_macro CANCEL_PRINT_WITH_ERROR]
gcode = 
	{% set error_msg = params.MSG|default('default_error_message')|string %}
	CANCEL_PRINT_BASE
	RESPOND TYPE=error MSG="{error_msg}"

[gcode_macro PARAMETERS_MATCH]
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% set svv = printer.save_variables.variables %}
	{% set mat0 = params.MAT0|default('none')|string %}
	{% set mat1 = params.MAT1|default('none')|string %}
	{% set nozzle0 = params.NZ0|default('none')|string %}
	{% set nozzle1 = params.NZ1|default('none')|string %}
	{% set MACHINE = params.MACHINE|default('none')|string %}
	{% set enabled = params.ENABLED|default('none')|string %}
	{% set initial_extruder = params.INITIAL_EXT|default('0')|string %}
	{% set filament_usage = params.F[1:][:-1].replace(' ', '').split(',') %}
	
	{% set INCOMPATIBLE_MATERIAL = "The material you're using is not compatible with this file" %}
	{% set INCOMPATIBLE_EXTRUDER = "The inserted Extruder is incompatible with this File" %}
	{% set INCOMPATIBLE_MODEL = "The file you are trying to print is for a different printer model" %}
	{% set NO_MATERIAL_FEEDER_1 = "The Filament is not inserted into the first feeder" %}
	{% set NO_MATERIAL_FEEDER_2 = "The Filament is not inserted into the second feeder" %}
	
	{% if filament_usage[1] is defined %}
	{% set material_usage = [filament_usage[0]|float, filament_usage[1]|float] %}
	{% else %}
	{% set material_usage = [filament_usage[0]|float, 0.0] %}
	{% endif %}
	
	{% if material_usage[1] != 0.0 %}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=extruder1_in_use VALUE=1
	M104 T1 S150
	{% endif %}
	
	{% if dcvars.setup_verification == 1 %}
	{% set both_in_use = true %}
	
	{% if material_usage[0] == 0.0 and material_usage[1] != 0.0 %}
	{% set both_in_use = false %}
	{% set material = svv.material_ext1 %}
	{% set received_material = mat1 %}
	{% set saved_nozzle = svv.nozzle1 %}
	{% set received_nozzle = nozzle1 %}
	{% elif material_usage[0] != 0.0 and material_usage[1] == 0.0 %}
	{% set both_in_use = false %}
	{% set material = svv.material_ext0 %}
	{% set received_material = mat0 %}
	{% set saved_nozzle = svv.nozzle0 %}
	{% set received_nozzle = nozzle0 %}
	{% endif %}
	
	{% if not both_in_use %} # If only one of the extruders is used
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=extruders_enabled VALUE=1
	{% if material in 'GENERIC' %}
	{% set is_generic = true %}
	{% endif %}
	{% if material not in received_material %}
	{% if not is_generic %}
	CANCEL_PRINT_WITH_ERROR MSG="{INCOMPATIBLE_MATERIAL}"
	{% endif %}
	{% endif %}
	{% if saved_nozzle != received_nozzle %}
	CANCEL_PRINT_WITH_ERROR MSG="{INCOMPATIBLE_EXTRUDER}"
	{% endif %}
	{% else %} # In this case, both extruders will be used
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=extruders_enabled VALUE=2
	{% if svv.material_ext0 not in mat0 %}
	{% if svv.material_ext0 not in 'GENERIC' %}
	CANCEL_PRINT_WITH_ERROR MSG="{INCOMPATIBLE_MATERIAL}"
	{% endif %}
	{% endif %}
	{% if svv.material_ext1 not in mat1 %}
	{% if svv.material_ext1 not in 'GENERIC' %}
	CANCEL_PRINT_WITH_ERROR MSG="{INCOMPATIBLE_MATERIAL}"
	{% endif %}
	{% endif %}
	{% if svv.nozzle0 not in nozzle0 %}
	CANCEL_PRINT_WITH_ERROR MSG="{INCOMPATIBLE_EXTRUDER}"
	{% endif %}
	{% if svv.nozzle1 not in nozzle1 %}
	CANCEL_PRINT_WITH_ERROR MSG="{INCOMPATIBLE_EXTRUDER}"
	{% endif %}
	{% endif %}
	{% endif %}
	
	{% if svv.machine != MACHINE %}
	CANCEL_PRINT_WITH_ERROR MSG="{INCOMPATIBLE_MODEL}"
	{% endif %}
	
	{% if dcvars.sensor_verification == 1 %}
	{% if dcvars.active_carriage == 0 %}
	{% if printer['filament_switch_sensor spool_one'].filament_detected != true %}
	CANCEL_PRINT_WITH_ERROR MSG="{NO_MATERIAL_FEEDER_1}"
	{% endif %}
	{% else %}
	{% if printer['filament_switch_sensor spool_two'].filament_detected != true %}
	CANCEL_PRINT_WITH_ERROR MSG="{NO_MATERIAL_FEEDER_2}"
	{% endif %}
	{% endif %}
	{% endif %}
	
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=material_cura0 VALUE="'{mat0}'"
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=material_cura1 VALUE="'{mat1}'"

[gcode_macro NOZZLE_SET]
gcode:
	{% set nz = params.NZ|default('none')|string %}
	{% set active_extruder = printer.toolhead.extruder %}
	{% set known_extruders = {
		"extruder": '0',
		"extruder1": '1'
	} %}

	# Do this for backwards compatibility with SwierVision
	{% set carriage = params.CARRIAGE|default(known_extruders[active_extruder]) %}

	{% if nz in ["Standard 0.25mm", "Standard 0.4mm", "Standard 0.8mm", "Fiber 0.6mm", "Metal 0.4mm"] %}
		{% if carriage in ['0', '1'] %}
			{% if carriage == '0' %}
				SAVE_VARIABLE VARIABLE=nozzle0 VALUE="'{nz}'"	
			{% elif carriage == '1' %}
				SAVE_VARIABLE VARIABLE=nozzle1 VALUE="'{nz}'"
			{% endif %}
			{action_respond_info("New ProExtruder selected.")}
		{% else %}
			{action_respond_info("Invalid carriage.")}
		{% endif %}
	{% else %}
		{action_respond_info("Invalid ProExtruder.")}
	{% endif %}

[gcode_macro CTEMP]
gcode = 
	{% set MAT = params.MAT|default(0)|string %}
	{% set FAM = params.FAM|default(0)|string %}
	{% set low = 20.0 %}
	{% set mid = 34.0 %}
	{% set high = 38.0 %}
	{% set general = 30.0 %}
	{% if MAT == 'PLA' or MAT == 'Tough PLA' or MAT == 'TPU 95A' or FAM == 'L_CHAMBER_TEMP' %}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=mat_temp VALUE={low|float}
	{action_respond_info("Chamber Temperature Set = LOW")}
	{% elif MAT == 'CPE' or MAT == 'CPE+' or MAT == 'PETG' or FAM == 'M_CHAMBER_TEMP' %}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=mat_temp VALUE={mid|float}
	{action_respond_info("Chamber Temperature Set = MEDIUM")}
	{% elif MAT == 'ABS' or MAT == 'Nylon' or MAT == 'PA' or MAT == 'PC' or MAT == 'PP' or FAM == 'H_CHAMBER_TEMP' %}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=mat_temp VALUE={high|float}
	{action_respond_info("Chamber Temperature Set = HIGH")}
	{% else %}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=mat_temp VALUE={general|float}
	{action_respond_info("Chamber Temperature Set = Standard")}
	{% endif %}

[gcode_macro LOAD_FILAMENT]
gcode = 
	{% set M = params.M|default('GENERIC')|string %}
	{% set M_ID = params.M_ID|default('basic')|string %}
	{% set X = params.X|default(150)|float %}
	{% set Y = params.Y|default(150)|float %}
	{% set Z = params.Z|default(5)|float %}
	{% set E = params.E|default(-25)|float %}
	read_materials
	LOAD_FILAMENT_CORE M='"{ M }"' M_ID='"{ M_ID }"' X={X} Y={Y} Z={Z} E={E}

[gcode_macro LOAD_FILAMENT_CORE]
gcode = 
	{% set M = params.M %}
	{% set M_ID = params.M_ID %}
	{% set X = params.X %}
	{% set Y = params.Y %}
	{% set Z = params.Z %}
	{% set E = params.E %}
	{% set T = params.T %}
	{% set temp = printer.extruder.target|int %}
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% set readmaterialsvars = printer["gcode_macro read_materials"] %}
	{% set XPOS = printer.configfile.settings.stepper_x.position_endstop|float + 0.75 %}
	{% set IPOS = printer.configfile.settings.dual_carriage.position_endstop|float - 0.75 %}
	{% set YPOS = printer.configfile.settings.stepper_y.position_endstop|float - 0.75 %}
	{% set tool = dcvars.active_carriage %}
	
	{% if dcvars.active_carriage == 0 %}
	{% set T = readmaterialsvars.material_0_load %}
	SAVE_VARIABLE VARIABLE=material_ext0 VALUE='{ M }'
	SAVE_VARIABLE VARIABLE=material_ext0_id VALUE='{ M_ID }'
	{% else %}
	{% set T = readmaterialsvars.material_1_load %}
	SAVE_VARIABLE VARIABLE=material_ext1 VALUE='{ M }'
	SAVE_VARIABLE VARIABLE=material_ext1_id VALUE='{ M_ID }'
	{% endif %}
	M82
	M104 T{tool} S{T}
	G90
	{% if 'xy' in printer.toolhead.homed_axes %}
	G1 X{X} Y{Y} F18000
	G28 Z
	{% else %}
	G28
	G1 X{X} Y{Y} F18000
	{% endif %}
	M109 T{tool} S{T}
	G92 E0
	G1 E790 F3250
	G1 E825 F500
	G1 E950 F70
	M400
	G92 E0
	TURN_OFF_HEATERS
	FILAMENT_PULL
	M84

[gcode_macro UNLOAD_FILAMENT]
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	G92 E0
	G1 E-100 F1800
	G1 E-920 F3500
	M400
	M84
	M104 S0
	{% if dcvars.active_carriage == 0 %}
	SAVE_VARIABLE VARIABLE=material_ext0 VALUE='"empty"'
	SAVE_VARIABLE VARIABLE=material_ext0_id VALUE='"empty"'
	{% else %}
	SAVE_VARIABLE VARIABLE=material_ext1 VALUE='"empty"'
	SAVE_VARIABLE VARIABLE=material_ext1_id VALUE='"empty"'
	{% endif %}

[gcode_macro HOT_UNLOAD_FILAMENT]
gcode = 
	{% set svv = printer.save_variables.variables %}
	{% set T = params.T|default(200)|float %}
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	
	M109 S{T}
	
	{% if dcvars.active_carriage == 0 %}
	TEMPERATURE_WAIT SENSOR=extruder  MINIMUM={printer.extruder.target}
	{% else %}
	TEMPERATURE_WAIT SENSOR=extruder1  MINIMUM={printer.extruder1.target}
	{% endif %}
	
	G92 E0
	G1 E25 F500
	G4 P20000
	
	G1 E-100 F1800
	M104 S0
	
	G1 E-920 F3500
	M400
	M84
	M104 S0
	
	{% if dcvars.active_carriage == 0 %}
	SAVE_VARIABLE VARIABLE=material_ext0 VALUE='"empty"'
	SAVE_VARIABLE VARIABLE=material_ext0_id VALUE='"empty"'
	{% else %}
	SAVE_VARIABLE VARIABLE=material_ext1 VALUE='"empty"'
	SAVE_VARIABLE VARIABLE=material_ext1_id VALUE='"empty"'
	{% endif %}

[gcode_macro IDEX_CALIBRATION_CHECK]
gcode = 
	{% set svv = printer.save_variables.variables %}
	
	{% if svv.material_ext0 is defined %}
	{% if svv.material_ext0 == 'empty' %}
	{% set isMaterialEmpty = true %}
	{% endif %}
	{% else %}
	{% set isMaterialEmpty = true %}
	{% endif %}
	
	{% if svv.material_ext1 is defined %}
	{% if svv.material_ext1 == 'empty' %}
	{% set isMaterialEmpty1 = true %}
	{% endif %}
	{% else %}
	{% set isMaterialEmpty1 = true %}
	{% endif %}
	
	{% if isMaterialEmpty or isMaterialEmpty1 %}
	CANCEL_PRINT_BASE
	RESPOND TYPE=error MSG="Both feeders must have materials inserted"
	{% endif %}

[gcode_macro CHANGE_MATERIAL]
gcode:
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% set svv = printer.save_variables.variables %}
	{% set M = params.M|default('GENERIC')|string %}
	{% set EXT = params.EXT|default(svv.active_carriage)|int %}
	{% set M_ID = params.M_ID|default('basic')|string %}

	{% if EXT == 0 %}
		SAVE_VARIABLE VARIABLE=material_ext0 VALUE='"{ M }"'
		SAVE_VARIABLE VARIABLE=material_ext0_id VALUE='"{ M_ID }"'
	{% else %}
		SAVE_VARIABLE VARIABLE=material_ext1 VALUE='"{ M }"'
		SAVE_VARIABLE VARIABLE=material_ext1_id VALUE='"{ M_ID }"'
	{% endif %}

[gcode_macro SET_SENSORS_VERIFICATION]
gcode = 
	{% set sensor = params.S|default(3)|int %}
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	
	{% if sensor == 3 %}
	{action_respond_info("sensors_verification:"+dcvars.sensor_verification|string)}
	{% else %}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=sensor_verification VALUE={sensor}
	{% endif %}

[gcode_macro SET_SETUP_VERIFICATION]
gcode = 
	{% set command_s= params.S|default(3)|int %}
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	
	{% if command_s == 3 %}
	{action_respond_info("setup_verification:"+dcvars.setup_verification|string)}
	{% else %}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=setup_verification VALUE={command_s}
	{% endif %}



[respond]

[save_variables]
filename = /home/pi/printer_data/config/variables.cfg

[virtual_sdcard]
path = /home/pi/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[display_status]

[pause_resume]
recover_velocity = 200

[endstop_phase]

[skew_correction]

[bed_mesh]
speed = 400
horizontal_move_z = 2.0
mesh_min = 30,30
mesh_max = 270, 270
probe_count = 4,4
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = 0.2
move_check_distance = 5
split_delta_z = .025

[screws_tilt_adjust]
screw1 = 0,5
screw1_name = Front left screw
screw2 = 300,5
screw2_name = Front right screw
screw3 = 157.5,300
screw3_name = Rear center screw
horizontal_move_z = 5
speed = 250
screw_thread = CW-M3

[gcode_macro EACCEL_GCODE]
gcode = 
	G1 E10 F50
	G1 E20 F500
	G1 E30 F1000
	G1 E40 F1500
	G1 E50 F2000
	G1 E60 F2500
	G1 E70 F3000
	G1 E675 F3250
	G1 E685 F2500
	G1 E695 F2000
	G1 E705 F1500
	G1 E715 F1000
	G1 E725 F500
	G1 E750 F500
	G1 E800 F70


[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE | default(1) | int != 0 %}
	{% set MACRO = params.MACRO | default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE | int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER | default(pause_at_layer.layer) | int %}
	{% set MACRO = params.MACRO | default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	{action_respond_info("%s, forced by pause_next_layer" % pause_next_layer.call)}
	{pause_next_layer.call} ; execute the given gcode to pause, should be either M600 or PAUSE
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	{action_respond_info("%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer))}
	{pause_at_layer.call} ; execute the given gcode to pause, should be either M600 or PAUSE
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = False if not macro_found
	else False if client.use_custom_pos is not defined
	else True  if client.use_custom_pos|lower == 'true'
	else False %}
	{% set custom_park_x  = 0.0 if not macro_found else client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = 0.0 if not macro_found else client.custom_park_y|default(0.0) %}
	{% set park_dz        = 2.0 if not macro_found else client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = 900  if not macro_found else client.speed_hop|default(15) * 60 %}
	{% set sp_move        = velocity * 60 if not macro_found else client.speed_move|default(velocity) * 60 %}
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %} ; height as long the toolhead can reach max and min of an delta
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro PARK_HEAD]
gcode = 
	{% set X = params.X|default(320)|float %}
	{% set Y = params.Y|default(303)|float %}
	{% set Z = params.Z|default(10)|float %}
	{% set E = params.E|default(-75)|float %}
	G91
	G1 E-5.0 F3000
	G1 Z{Z} F700
	G90
	G1 X280 Y{Y} F18000
	M400
	G1 X{X} F18000

[gcode_macro BED_SCREWS_ADJUST]
rename_existing = BED_SCREWS_ADJUST_BASE
gcode = 
	{% set X = params.X|default(150)|float %}
	{% set Y = params.Y|default(150)|float %}
	{% set Z = params.Z|default(5)|float %}
	{% set E = params.E|default(90)|float %}
	{% set T = params.T|default(235)|float %}
	status_probing
	G28
	Z_TILT_ADJUST
	BED_SCREWS_ADJUST_BASE

[gcode_macro EACCEL_GCODE]
gcode = 
	G1 E10 F50
	G1 E20 F500
	G1 E30 F1000
	G1 E40 F1500
	G1 E50 F2000
	G1 E60 F2500
	G1 E70 F3000
	G1 E675 F3250
	G1 E685 F2500
	G1 E695 F2000
	G1 E705 F1500
	G1 E715 F1000
	G1 E725 F500
	G1 E750 F500
	G1 E800 F70

[gcode_macro UNLOAD_EXTRUDER_SWITCH]
gcode = 
	
	{% set X = params.X|default(150)|float %}
	{% set Y = params.Y|default(150)|float %}
	{% set Z = params.Z|default(5)|float %}
	{% set E = params.E|default(35)|float %}
	{% set T = params.T|default(250)|float %}
	G92 E0
	G1 E-100 F1200
	G1 E-880 F3500
	M400
	M104 S0

[gcode_macro M140]
rename_existing = M140.1
gcode = 
	{% set S = params.S|int %}
	{% set bed_max = printer.configfile.config.heater_bed.max_temp|int %}
	{% set bed_limiter = bed_max-5|int %}
	{% if S >= bed_limiter %}
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_limiter}
	{% else %}
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}
	{% endif %}

[gcode_macro DUMPX]
gcode = 
	DUMP_TMC STEPPER=stepper_x

[gcode_macro DUMPY]
gcode = 
	DUMP_TMC STEPPER=stepper_y

[gcode_macro DUMPZ]
gcode = 
	DUMP_TMC STEPPER=stepper_z

[gcode_macro DUMPE0]
gcode = 
	DUMP_TMC STEPPER=extruder

[gcode_macro DUMPE1]
gcode = 
	DUMP_TMC STEPPER=extruder1

[gcode_macro SEARCH_VARS]
gcode = 
	{% set search = params.S|lower %}
	{% set ns = namespace() %}
	{% for item in printer  %}
	{% if ' ' in item %}
	{% set ns.path = ['printer', "['%s']" % (item), ''] %}
	{% else %}
	{% set ns.path = ['printer.', item, ''] %}
	{% endif %}
	
	{% if search in ns.path|lower %}
	{ action_respond_info(ns.path|join) }
	{% endif %}
	
	{% if printer[item].items() %}
	{% for childkey, child in printer[item].items() recursive %}
	{% set ns.path = ns.path[:loop.depth|int + 1] %}
	
	{% if ' ' in childkey %}
	{% set null = ns.path.append("['%s']" % (childkey)) %}
	{% else %}
	{% set null = ns.path.append(".%s" % (childkey)) %}
	{% endif %}
	
	{% if child is mapping  %}
	{ loop(child.items()) }
	{% else %}
	{% if search in ns.path|lower %}
	{ action_respond_info("%s : %s" % (ns.path|join, child)) }
	{% endif %}
	{% endif %}
	
	{% endfor %}
	{% endif %}
	{% endfor %}

[gcode_macro BABYZ]
gcode = 
	{% set S = params.S|default(2)|float %}
	SET_GCODE_OFFSET MOVE=1 Z={S}

[gcode_macro prntstats]
gcode = 
	Status
	{% if printer.webhooks.state != 'Printing' %}
	
	SET_LED LED=temp_leds RED=0 GREEN=0 BLUE=1 TRANSMIT=1
	
	{% else %}
	
	SET_LED LED=temp_leds RED=0 GREEN=1 BLUE=0 TRANSMIT=1
	
	{% endif %}

[gcode_macro DUMP_VARS]
gcode = 
	{% for name1 in printer %}
	{% for name2 in printer[name1] %}
	{% if (name1 != "configfile") and (name1 != "bed_mesh" and name2!="mesh_matrix") and (name1 != "mcu" and name2!="mcu_constants") and (name1 != "mcu" and name2!="last_stats") and (name2 != "color_data") and (andm1 != "gcode_macro") %}
	{ action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
	{% else %}
	{ action_respond_info("printer['%s'].%s = %s" % (name1, name2, "...")) }
	{% endif %}
	{% endfor %}
	{% endfor %}

[gcode_macro case_lights]
variable_state = 1
gcode = 
	{% if printer["gcode_macro case_lights"].state == 1 %}
	SET_PIN PIN=case_light VALUE=0
	SET_GCODE_VARIABLE MACRO=case_lights VARIABLE=state VALUE=0
	{% else %}
	SET_PIN PIN=case_light VALUE=1
	SET_GCODE_VARIABLE MACRO=case_lights VARIABLE=state VALUE=1
	{% endif %}

[led_effect set_progress_leds]
leds = 
	neopixel:progress_leds
autostart = true
frame_rate = 24
layers = 
	static 0 0 top (1.0, 1.0, 1.0)

[led_effect set_nozzle_leds]
leds = 
	neopixel:heater_leds
autostart = true
frame_rate = 24
layers = 
	static 0 0 top (1.0, 1.0, 1.0)

[led_effect progress_bar]
leds = 
	neopixel:progress_leds
autostart = false
frame_rate = 24
layers = 
	progress  -2  0 subtract    ( 0, 0, 0),( 1, 0, 1)
	static     0  0 top    ( 1, 1, 1)

[led_effect print_end]
leds = 
	neopixel:progress_leds
autostart = false
frame_rate = 24
layers = 
	breathing 8 0 top (0, 1, 0)

[led_effect print_pause]
leds = 
	neopixel:progress_leds
autostart = false
frame_rate = 24
layers = 
	comet 1 5 top (0, 0.1, 1)

[led_effect print_cancel]
leds = 
	neopixel:progress_leds
autostart = false
frame_rate = 24
layers = 
	breathing 8 0 top (1, 0, 0)

[led_effect nozzle_heating_front_leds]
leds = 
	neopixel:progress_leds
autostart = false
frame_rate = 24
heater = extruder
layers = 
	heater 35 0 add (0,0,0),(1,1,1)
	breathing 3 0 top (1, 0.18, 0.0)

[led_effect probing]
leds = 
	neopixel:heater_leds
autostart = false
frame_rate = 24
endstops = probe
layers = 
	homing	8	0	add	(0, 1, 0)
	static	0	0	top	(0, 0, 0)

[led_effect atc_leds]
leds = 
	neopixel:heater_leds
autostart = false
frame_rate = 24
layers = 
	linearfade 3 0 top (0.0, 1.0, 1.0),(0.0,0.0,1.0)

[gcode_macro status_printing]
gcode = 
	SET_LED_EFFECT EFFECT=progress_bar REPLACE=1 FADETIME=1.5

[gcode_macro status_heating_front_leds]
gcode = 
	SET_LED_EFFECT EFFECT=nozzle_heating_front_leds REPLACE=1 FADETIME=1.5

[gcode_macro progress_bar_idle]
gcode = 
	SET_LED_EFFECT EFFECT=set_progress_leds REPLACE=1 FADETIME=1.5

[gcode_macro print_success]
gcode = 
	SET_LED_EFFECT EFFECT=print_end REPLACE=1 FADETIME=1.5

[gcode_macro status_pause]
gcode = 
	SET_LED_EFFECT EFFECT=print_pause REPLACE=1 FADETIME=1.5

[gcode_macro status_cancel]
gcode = 
	SET_LED_EFFECT EFFECT=print_cancel REPLACE=1 FADETIME=1.5

[gcode_macro status_atc]
gcode = 
	SET_LED_EFFECT EFFECT=atc_leds REPLACE=1 FADETIME=1.5

[delayed_gcode report_temp]
initial_duration = 5
gcode = 
	update_leds
	UPDATE_DELAYED_GCODE ID=report_temp DURATION=5




[gcode_macro DC_VARS]
variable_offset_x = 0
variable_offset_y = 0
variable_offset_z = 0
variable_left_probe = 0
variable_right_probe = 0
variable_diff_treshold = 0.2
variable_autopark = 1
variable_z_hop = 0
variable_movespeed = 6000
variable_feedrate = 18000
variable_y_scrub = 290
variable_print_mode = 0
variable_bed_x_min = 0
variable_bed_x_max = 303
variable_fan0 = 'fanX1'
variable_fan1 = 'fanX2'
variable_offset_temp = 0
variable_active_carriage = 0
variable_mat_temp = 32
variable_material_cura0 = 'empty'
variable_material_cura1 = 'empty'
variable_extruders_enabled = 0
variable_sensor_verification = 1
variable_setup_verification = 1
variable_extruder1_in_use = 0
gcode = 

[ gcode_macro IDEX_OFFSET]
gcode = 
	{% set svv = printer.save_variables.variables %}
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% set afc_vars = printer["gcode_macro AFC_VARS"] %}
	{% set offset_x = params.X|default(0.0)|float(2) %}
	{% set offset_y = params.Y|default(0.0)|float(2) %}
	{% set offset_z = params.Z|default(0.0)|float(2) %}
	{% if afc_vars.isprinting == 1 and printer.dual_carriage.carriage_1 == 'PRIMARY' %}
	SET_GCODE_OFFSET X_ADJUST={offset_x} Y_ADJUST={offset_y} MOVE=1 #Z_ADJUST={offset_z} MOVE=1
	{% endif %}
	{% set new_offset_x = (dcvars.offset_x|float(2) + offset_x|float(2)) %}
	{% set new_offset_y = (dcvars.offset_y|float(2) + offset_y|float(2)) %}
	SAVE_VARIABLE VARIABLE=offset_x VALUE={new_offset_x}
	SAVE_VARIABLE VARIABLE=offset_y VALUE={new_offset_y}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=offset_x VALUE={new_offset_x}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=offset_y VALUE={new_offset_y}

[gcode_macro T0]
variable_was_active = 0
variable_was_primed = 0
description = Activate T0 in "FULL_CONTROL" or "AUTO-PARK"
gcode = 
	{% set svv = printer.save_variables.variables %}
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% set afc_vars = printer["gcode_macro AFC_VARS"] %}
	{% if printer.dual_carriage.carriage_1 == 'PRIMARY' %}
		{% if printer.idle_timeout.state != "Printing" and afc_vars.isprinting == 0 %}
			ACTIVATE_EXTRUDER EXTRUDER=extruder
			SET_DUAL_CARRIAGE CARRIAGE=0
			SET_GCODE_VARIABLE MACRO=T0 VARIABLE=was_active VALUE=1
			SET_GCODE_VARIABLE MACRO=T1 VARIABLE=was_active VALUE=0
			SAVE_VARIABLE VARIABLE=active_carriage VALUE=0
			SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=active_carriage VALUE=0
		{% else %}
			M400
			SAVE_GCODE_STATE NAME=toolhead_state
			_PARK_TOOL
			M400
			ACTIVATE_EXTRUDER EXTRUDER=extruder
			SET_DUAL_CARRIAGE CARRIAGE=0
			SET_GCODE_OFFSET X=0 Y=0 Z=0
			SAVE_VARIABLE VARIABLE=active_carriage VALUE=0
			SET_GCODE_VARIABLE MACRO=T1 VARIABLE=was_active VALUE=1
			SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=active_carriage VALUE=0
			{% if afc_vars.isprinting == 1 %}
				right_idle
				M400
				SET_GCODE_VARIABLE MACRO=T0 VARIABLE=was_active VALUE=1
			{% if printer['gcode_macro T0'].was_primed == 0 and afc_vars.afc == 0 %} #and afc_vars.isprinting == 0 %}
				PRIME_ROUTINE
				M400
				SET_GCODE_VARIABLE MACRO=T0 VARIABLE=was_primed VALUE=1
			{% endif %}
			left_printing
			_NOZZLE_SCRUB
		{% endif %}
		RESTORE_GCODE_STATE NAME=toolhead_state
		SET_GCODE_OFFSET X=0 Y=0 Z=0 #MOVE=0 MOVE_SPEED={dcvars.movespeed}
		_SET_PRINT_FANS_SPEED
		{% endif %}
	{% endif %}

[gcode_macro T1]
variable_was_active = 0
variable_was_primed = 0
description = Activate T1 in "FULL_CONTROL" or "AUTO-PARK"
gcode = 
	{% set svv = printer.save_variables.variables %}
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% set afc_vars = printer["gcode_macro AFC_VARS"] %}
	{% if printer.dual_carriage.carriage_0 == 'PRIMARY' %}
		{% if printer.idle_timeout.state != "Printing" and afc_vars.isprinting == 0 %}
			ACTIVATE_EXTRUDER EXTRUDER=extruder1
			SET_DUAL_CARRIAGE CARRIAGE=1
			SET_GCODE_VARIABLE MACRO=T1 VARIABLE=was_active VALUE=1
			SET_GCODE_VARIABLE MACRO=T0 VARIABLE=was_active VALUE=0
			SAVE_VARIABLE VARIABLE=active_carriage VALUE=1
			SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=active_carriage VALUE=1
		{% else %}
			SAVE_GCODE_STATE NAME=toolhead_state
			_PARK_TOOL
			M400
			ACTIVATE_EXTRUDER EXTRUDER=extruder1
			SET_DUAL_CARRIAGE CARRIAGE=1
			SET_GCODE_OFFSET X={dcvars.offset_x} Y={dcvars.offset_y} Z={dcvars.offset_z}
			SAVE_VARIABLE VARIABLE=active_carriage VALUE=1
			SET_GCODE_VARIABLE MACRO=T1 VARIABLE=was_active VALUE=1
			SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=active_carriage VALUE=1
			{% if afc_vars.isprinting == 1 %}#printer.idle_timeout.state == "Printing" %}
				left_idle
				M400
			{% if printer['gcode_macro T1'].was_primed == 0 and afc_vars.afc == 0 %}
				PRIME_ROUTINE
				M400
				SET_GCODE_VARIABLE MACRO=T1 VARIABLE=was_primed VALUE=1
			{% endif %}
			right_printing
			_NOZZLE_SCRUB
		{% endif %}
		{% if printer['gcode_macro AFC_VARS'].was_enabled == 1 %}
			RESTORE_GCODE_STATE NAME=runout_state
		{% else %}
			RESTORE_GCODE_STATE NAME=toolhead_state
		{% endif %}
		SET_GCODE_OFFSET X={dcvars.offset_x} Y={dcvars.offset_y} Z={dcvars.offset_z} #MOVE=0 MOVE_SPEED={dcvars.movespeed}
		_SET_PRINT_FANS_SPEED
		{% endif %}
	{% endif %}

[gcode_macro _PARK_TOOL]
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	SAVE_GCODE_STATE NAME=park_tool
	SET_GCODE_OFFSET X=0 Y=0 Z=0
	G90
	{% if printer.dual_carriage.carriage_0 == 'PRIMARY' %}
		{% set XPOS = printer.configfile.settings.stepper_x.position_endstop|float + 0.75 %}
		G1 X{XPOS} F{dcvars.feedrate}
	{% elif printer.dual_carriage.carriage_1 == 'PRIMARY' %}
		{% set XPOS = printer.configfile.settings.dual_carriage.position_endstop|float - 0.75 %}
		G1 X{XPOS} F{dcvars.feedrate}
	{% else %}
		RESPOND TYPE=error MSG={ "Unknown extruder: %s".format(printer.toolhead.extruder) }
	{% endif %}
	{% if dcvars.y_scrub <= 275 %}
		SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=y_scrub VALUE=290
	{% else %}
		SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=y_scrub VALUE={dcvars.y_scrub - 1}
	{% endif %}
	SAVE_VARIABLE VARIABLE=y_scrub VALUE={dcvars.y_scrub}
	RESTORE_GCODE_STATE NAME=park_tool

[gcode_macro _NOZZLE_SCRUB]
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% if printer.dual_carriage is defined %}
	G90
	{% if printer.toolhead.extruder == 'extruder' %}
	{% set XPOS = printer.configfile.config.stepper_x.position_endstop|float + 0.75 %}
	{% set XPOS1 = printer.configfile.config.stepper_x.position_endstop|float + 15.0 %}
	{% set YPOS = printer.configfile.config.stepper_y.position_endstop|float - 6.0 %}
	G1 Y{YPOS} F{dcvars.feedrate}
	G1 X{XPOS1} F{dcvars.feedrate}
	G1 Y{YPOS - 3} F{dcvars.feedrate}
	G1 X{XPOS} F{dcvars.feedrate}
	G1 Y{YPOS - 6} F{dcvars.feedrate}
	G1 X{XPOS1} F{dcvars.feedrate}
	G1 Y{YPOS - 9} F{dcvars.feedrate}
	G1 X{XPOS} F{dcvars.feedrate}
	G1 Y{YPOS - 12} F{dcvars.feedrate}
	G1 X{XPOS1} F{dcvars.feedrate}
	{% elif (printer.toolhead.extruder) == 'extruder1' %}
	SET_GCODE_OFFSET X=0 Y=0 Z=0
	{% set XPOS = printer.configfile.config.dual_carriage.position_endstop|float - 0.75 %}
	{% set XPOS1 = printer.configfile.config.dual_carriage.position_endstop|float - 15.0 %}
	{% set YPOS = printer.configfile.config.stepper_y.position_endstop|float - 6.0 %}
	G1 Y{YPOS} F{dcvars.feedrate}
	G1 X{XPOS1} F{dcvars.feedrate}
	G1 Y{YPOS - 3} F{dcvars.feedrate}
	G1 X{XPOS} F{dcvars.feedrate}
	G1 Y{YPOS - 6} F{dcvars.feedrate}
	G1 X{XPOS1} F{dcvars.feedrate}
	G1 Y{YPOS - 9} F{dcvars.feedrate}
	G1 X{XPOS} F{dcvars.feedrate}
	G1 Y{YPOS - 12} F{dcvars.feedrate}
	G1 X{XPOS1} F{dcvars.feedrate}
	SET_GCODE_OFFSET X={dcvars.offset_x} Y={dcvars.offset_y} Z={dcvars.offset_z}
	{% else %}
	RESPOND TYPE=error MSG={ "Unknown extruder: %s".format(printer.toolhead.extruder) }
	{% endif %}
	{% endif %}

[gcode_macro M605]
description = Set the dual-carriages mode
gcode = 
	{% set mode = params.S|default(0)|int %}
	{% set offset_temp = params.R|default(0)|float %}
	{% if (mode) == 0 %}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=print_mode VALUE=0
	{% elif (mode) == 1 %}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=print_mode VALUE=1
	{% elif (mode) == 2 %}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=print_mode VALUE=2
	{% endif %}

[gcode_macro ACTIVATE_COPY_MODE]
gcode = 
	SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
	G1 X75 F24000
	ACTIVATE_EXTRUDER EXTRUDER=extruder
	SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
	G1 X225
	SET_DUAL_CARRIAGE CARRIAGE=1 MODE=COPY
	SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder

[gcode_macro ACTIVATE_MIRROR_MODE]
gcode = 
	SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
	G1 X0 F24000
	ACTIVATE_EXTRUDER EXTRUDER=extruder
	SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
	G1 X300
	SET_DUAL_CARRIAGE CARRIAGE=1 MODE=MIRROR
	SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder

[gcode_macro M106]
description = Override "M106" to allow multiple extruders.
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% set raw_speed = params.S|default(0)|float %}
	{% set fan_speed = (raw_speed / 255.0)|round(2) %}
	{% if (params.P) is defined %}
	{% set P_fan = dcvars.fan0 if (params.P)|int == 0 else dcvars.fan1 %}
	SET_FAN_SPEED FAN={P_fan} SPEED={fan_speed}
	{% else %}
	_SET_PRINT_FANS_SPEED SPEED={fan_speed}
	{% endif %}

[gcode_macro M107]
description = Override "M107" to allow multiple extruders.
gcode = 
	M106 S0

[gcode_macro _SET_PRINT_FANS_SPEED]
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% if params.SPEED is defined %}
	{% set fan_speed = params.SPEED|float %}
	{% else %}
	{% set fan0_speed = printer["fan_generic " + dcvars.fan0].speed|float %}
	{% set fan1_speed = printer["fan_generic " + dcvars.fan1].speed|float %}
	{% set fan_speed = [fan0_speed, fan1_speed]|max %}
	{% endif %}
	{% if dcvars.active_carriage == "BOTH" %}
	SET_FAN_SPEED FAN={dcvars.fan0} SPEED={fan_speed}
	SET_FAN_SPEED FAN={dcvars.fan1} SPEED={fan_speed}
	{% elif dcvars.active_carriage == 0 %}
	SET_FAN_SPEED FAN={dcvars.fan0} SPEED={fan_speed}
	SET_FAN_SPEED FAN={dcvars.fan1} SPEED={fan_speed}
	{% elif dcvars.active_carriage == 1 %}
	SET_FAN_SPEED FAN={dcvars.fan0} SPEED={fan_speed}
	SET_FAN_SPEED FAN={dcvars.fan1} SPEED={fan_speed}
	{% endif %}

[gcode_macro M104]
rename_existing = M104.1
description = Override "M104" to allow multiple extruders to be synchronized.
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% set temp = params.S|default(0)|float %}
	{% set tool = params.T|default(3)|int %}
	{% if tool == 0 %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp}
	{% elif tool == 1 %}
	SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={temp}
	{% else %}
	{% if dcvars.active_carriage == 0 %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp}
	{% else %}
	SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={temp}
	{% endif %}
	{% endif %}
	{% if dcvars.print_mode != 0 %}
	_SYNC_EXTRUDERS_TEMP
	{% endif %}

[gcode_macro M109]
rename_existing = M109.1
description = Override "M109" to allow multiple extruders to be synchronized.
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% set temp = params.S|default(0)|float %}
	{% set tool = params.T|default(3)|int %}
	{% set tolerance = params.TOLERANCE|default(8)|int %}
	{% if tool == 0 %}
	{% set heater = "extruder" %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp}
	{% elif tool == 1 %}
	{% set heater = "extruder1" %}
	SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={temp}
	{% else %}
	{% if dcvars.active_carriage == 0 %}
	{% set heater = "extruder" %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp}
	{% else %}
	{% set heater = "extruder1" %}
	SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={temp}
	{% endif %}
	{% endif %}
	{% if dcvars.print_mode != 0 %}
	_SYNC_EXTRUDERS_TEMP
	{% endif %}
	M400
	TEMPERATURE_WAIT SENSOR={heater} MINIMUM={temp - tolerance}

[gcode_macro _SYNC_EXTRUDERS_TEMP]
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% set temp1 = printer.extruder.target|float %}
	{% set temp2 = printer.extruder1.target|float %}
	{% if dcvars.active_carriage == 0%}
	M104.1 T1 S{temp1}
	status_heating_right
	{% else %}
	M104.1 T0 S{temp2}
	status_heating_left
	{% endif %}

[gcode_macro IDEX_NOZZLE_CHECK]
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% if 'xyz' in printer.toolhead.homed_axes %}
	ACTIVATE_EXTRUDER EXTRUDER=extruder
	SET_DUAL_CARRIAGE CARRIAGE=0
	G1 X150 Y150 Z5 F18000
	{% else %}
	ACTIVATE_EXTRUDER EXTRUDER=extruder
	SET_DUAL_CARRIAGE CARRIAGE=0
	G28
	G1 X150 Y150 Z5 F18000
	{% endif %}
	SAVE_GCODE_STATE NAME=toolhead_state
	PROBE
	LEFT_PROBE_OFFSET
	G1 Z5 F3000
	_PARK_TOOL
	ACTIVATE_EXTRUDER EXTRUDER=extruder1
	SET_DUAL_CARRIAGE CARRIAGE=1
	RESTORE_GCODE_STATE NAME=toolhead_state MOVE=1 MOVE_SPEED=30000
	ACTIVATE_EXTRUDER EXTRUDER=extruder
	SET_DUAL_CARRIAGE CARRIAGE=0
	PROBE
	RIGHT_PROBE_OFFSET
	ACTIVATE_EXTRUDER EXTRUDER=extruder1
	SET_DUAL_CARRIAGE CARRIAGE=1
	G1 Z5 F3000
	_PARK_TOOL
	ACTIVATE_EXTRUDER EXTRUDER=extruder
	SET_DUAL_CARRIAGE CARRIAGE=0
	IDEX_DIFF

[gcode_macro LEFT_PROBE_OFFSET]
gcode = 
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=left_probe VALUE={printer.probe.last_z_result|round(3, 'common')}

[gcode_macro RIGHT_PROBE_OFFSET]
gcode = 
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=right_probe VALUE={printer.probe.last_z_result|round(3, 'common')}

[gcode_macro IDEX_DIFF]
gcode = 
	{% set dcvars = printer["gcode_macro DC_VARS"] %}
	{% set afcvars = printer["gcode_macro AFC_VARS"] %}
	{% set left = dcvars.left_probe|float %}
	{% set right = dcvars.right_probe|float %}
	{% set probe_offset = printer.configfile.settings.probe.z_offset %}
	{% if left < 0 and right < 0 %}
	{% if left > right %}
	{% set diff = (right - left|float) %}
	{% elif left < right %}
	{% set diff = (left - right|float) * -1 %}
	{% else %}
	{% set diff = 0 %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=offset_z VALUE={diff}
	{% elif left > 0 and right < 0 %}
	{% set diff = (left - right|float) %}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=offset_z VALUE={diff * -1}
	{% elif left < 0 and right > 0 %}
	{% set diff = (right - left|float) %}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=offset_z VALUE={diff}
	{% else %}
	{% if left > right %}
	{% set diff = (left - right|float) %}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=offset_z VALUE={diff * -1}
	{% else %}
	{% set diff = (right - left|float) %}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=offset_z VALUE={diff * -1}
	{% endif %}
	{% endif %}
	{% if dcvars.print_mode != 0 %}
	{% if diff > dcvars.diff_treshold or diff < (dcvars.diff_treshold * -1) %}
	RESPOND TYPE=error MSG="Nozzle height difference limit exceeded."
	{action_raise_error("Nozzle height difference limit exceeded." +diff|string)}
	{% else %}
	{action_respond_info("Nozzle's height within tolerance: " +diff|string)}
	G1 X150 Y150 F24000
	PROBE
	M400
	G92 Z{probe_offset}
	M400
	G1 Z5 F2000
	{% endif %}
	{% elif afcvars.isprinting == 0 %}
	{% if diff > dcvars.diff_treshold or diff < (dcvars.diff_treshold * -1) %}
	CANCEL_PRINT
	RESPOND TYPE=error MSG="Nozzle height difference limit exceeded."
	{% else %}
	M118 Nozzle height within tolerance: {diff}
	{% endif %}
	{% endif %}



#####    IDEX XY offset calibration print macro   ####
## This macro prints calibration patterns according ##
##      to nozzle size and material parameters      ##
######################################################

[gcode_macro print_calibration]
gcode:
    SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=extruders_enabled VALUE=2
    G90
    SET_GCODE_OFFSET X=0 Y=0 Z=0
    {% set svv = printer.save_variables.variables %}
    {% if svv.nozzle0 == 'Standard 0.4mm' and svv.nozzle1 == 'Standard 0.4mm' %}
        SDCARD_PRINT_FILE FILENAME=.calibrations/ST04+ST04.gcode
    {% elif svv.nozzle0 == "Standard 0.25mm" and svv.nozzle1 == "Standard 0.25mm" %}
        SDCARD_PRINT_FILE FILENAME=.calibrations/ST25+ST25.gcode
    {% elif svv.nozzle0 == "Standard 0.25mm" and svv.nozzle1 == "Standard 0.04mm" %}
        SDCARD_PRINT_FILE FILENAME=.calibrations/ST25+ST04.gcode
    {% elif svv.nozzle0 == "Standard 0.8mm" and svv.nozzle1 == "Standard 0.4mm" %}
        SDCARD_PRINT_FILE FILENAME=.calibrations/ST08+ST04.gcode
    {% elif svv.nozzle0 == "Metal 0.4mm" and svv.nozzle1 == "Standard 0.4mm" %}
        SDCARD_PRINT_FILE FILENAME=.calibrations/METAL04+ST04.gcode
    {% elif svv.nozzle0 == "Fiber 0.6mm" and svv.nozzle1 == "Standard 0.4mm" %}
        SDCARD_PRINT_FILE FILENAME=.calibrations/FIBER06+ST04.gcode
    {% else %}
        CANCEL_PRINT_WITH_ERROR MSG="Nozzle combination not configured. Please, manually slice and print the calibration file"
    {% endif %}

######################################################

###################################################### 
####         Materials print temperatures         ####

[gcode_macro read_materials]
variable_material_0: 210
variable_material_1: 210
variable_material_0_load: 210
variable_material_1_load: 210
variable_material_0_purge: 210
variable_material_1_purge: 210
variable_material_0_cooldown: 210
variable_material_1_cooldown: 210
variable_bed_temp_0: 80
variable_bed_temp_1: 80
gcode:
    {% set svv = printer.save_variables.variables %}
	{% set materials = ({
		"Breakaway": 225, #Feito E-15 IDEX
		"ABS": 235, #Feito E-15
		"ASA": 260,
		"BVOH": 205, #Feito E-15 IDEX
		"CPE": 245, #Feito E-15
		"CPE+": 270, #Feito E-15
		"Tritan": 250, #Feito E-15
		"I150": 235,
		"I151": 240,
		"I180": 260,
		"Nylon": 250, #Feito E-15
		"PA6 HT": 250, #Feito E-15
		"PAHT CF15": 270, #Feito E-15
		"PC": 280, #Feito E-15
		"PC-ABS": 280,
		"PET": 225, #Feito E-15
		"PET CF15": 270, #Feito E-15
		"PETG": 240, #Feito E-15
		"PLA": 211, #Feito E-15
		"PP": 207, #Feito E-15
		"PP GF30": 260, #Feito E-15
		"PVA": 225, #Feito E-15 IDEX
		"Tough PLA": 215, #Feito E-15
		"TPU 64D": 225, #Feito E-15
		"TPU 95A": 225, #Feito E-15
		"17-4PH": 245, 
		"316L": 240,
		"PLA HT": 260, #Feito E-15
		"PLA HTI": 280
	})%}

    {% set materials_load = ({
		"Breakaway": 230,
		"ABS": 245,
		"ASA": 260,
		"BVOH": 210,
		"CPE": 250,
		"CPE+": 275,
		"Tritan": 255,
		"I150": 235,
		"I151": 240,
		"I180": 260,
		"Nylon": 250,
		"PA6 HT": 250,
		"PAHT CF15": 280,
		"PC": 285,
		"PC-ABS": 280,
		"PET": 230,
		"PET CF15": 280,
		"PETG": 245,
		"PLA": 235,
		"PP": 215,
		"PP GF30": 270,
		"PVA": 225,
		"Tough PLA": 220,
		"TPU 64D": 235,
		"TPU 95A": 235,
		"17-4PH": 245,
		"316L": 240,
		"PLA HT": 270,
		"PLA HTI": 280
	})%}

    {% set materials_purge = ({
		"Breakaway": 200,
		"ABS": 185,
		"ASA": 260,
		"BVOH": 175,
		"CPE": 205,
		"CPE+": 220,
		"Tritan": 220,
		"I150": 235,
		"I151": 240,
		"I180": 260,
		"Nylon": 215,
		"PA6 HT": 215,
		"PAHT CF15": 260,
		"PC": 200,
		"PC-ABS": 280,
		"PET": 165,
		"PET CF15": 260,
		"PETG": 185,
		"PLA": 165,
		"PP": 178,
		"PP GF30": 250,
		"PVA": 180,
		"Tough PLA": 170,
		"TPU 64D": 210,
		"TPU 95A": 210,
		"17-4PH": 245,
		"316L": 240,
		"PLA HT": 175,
		"PLA HTI": 280
	})%}

	{% set materials_cooldown = ({
		"Breakaway": 200,
		"ABS": 175,
		"ASA": 260,
		"BVOH": 170,
		"CPE": 200,
		"CPE+": 210,
		"Tritan": 210,
		"I150": 235,
		"I151": 240,
		"I180": 260,
		"Nylon": 200,
		"PA6 HT": 200,
		"PAHT CF15": 260,
		"PC": 200,
		"PC-ABS": 280,
		"PET": 165,
		"PET CF15": 260,
		"PETG": 160,
		"PLA": 160,
		"PP": 165,
		"PP GF30": 250,
		"PVA": 180,
		"Tough PLA": 160,
		"TPU 64D": 205,
		"TPU 95A": 205,
		"17-4PH": 245,
		"316L": 240,
		"PLA HT": 170,
		"PLA HTI": 280
	})%}

    {% set bed_temp = ({
        "Breakaway": 60,
        "ABS": 90,
        "ASA": 95,
        "BVOH": 60,
        "CPE": 75,
        "CPE+": 95,
        "I150": 70,
        "I151": 85,
        "I180": 90,
        "Nylon": 70,
        "PAHT CF15": 100,
        "PC": 105,
        "PC-ABS": 95,
        "PET": 70,
        "PET CF15": 100,
        "PETG": 70,
        "PLA": 60,
        "PP": 100,
        "PP GF30": 85,
        "PVA": 60,
        "Tough PLA": 60,
        "TPU 64D": 60,
        "TPU 95A": 225,
        "17-4PH": 100,
        "316L": 100
    })%}

    {% if svv.material_ext0 in materials %}
        SET_GCODE_VARIABLE MACRO=read_materials VARIABLE=material_0 VALUE={materials[svv.material_ext0]}
        SET_GCODE_VARIABLE MACRO=read_materials VARIABLE=material_0_load VALUE={materials_load[svv.material_ext0]}
        SET_GCODE_VARIABLE MACRO=read_materials VARIABLE=material_0_purge VALUE={materials_purge[svv.material_ext0]}
        SET_GCODE_VARIABLE MACRO=read_materials VARIABLE=material_0_cooldown VALUE={materials_cooldown[svv.material_ext0]}
        SET_GCODE_VARIABLE MACRO=read_materials VARIABLE=bed_temp_0 VALUE={bed_temp[svv.material_ext0]}
    # {% else %}
    #     SET_GCODE_VARIABLE MACRO=read_materials VARIABLE=material_0 VALUE=210
    {% endif %}

    {% if svv.material_ext1 in materials %}
        SET_GCODE_VARIABLE MACRO=read_materials VARIABLE=material_1 VALUE={materials[svv.material_ext1]}
        SET_GCODE_VARIABLE MACRO=read_materials VARIABLE=material_1_load VALUE={materials_load[svv.material_ext1]}
        SET_GCODE_VARIABLE MACRO=read_materials VARIABLE=material_1_purge VALUE={materials_purge[svv.material_ext1]}
        SET_GCODE_VARIABLE MACRO=read_materials VARIABLE=material_1_cooldown VALUE={materials_cooldown[svv.material_ext1]}
        SET_GCODE_VARIABLE MACRO=read_materials VARIABLE=bed_temp_1 VALUE={bed_temp[svv.material_ext1]}
    # {% else %}
    #     SET_GCODE_VARIABLE MACRO=read_materials VARIABLE=material_1 VALUE=210
    {% endif %}

    # {% if t_bed_0 >= t_bed_1 %}
    #     SET_GCODE_VARIABLE MACRO=read_materials VARIABLE=bed_temp VALUE={t_bed_0}
    # {% elif if t_bed_0 < t_bed_1 %}
    #     SET_GCODE_VARIABLE MACRO=read_materials VARIABLE=bed_temp VALUE={t_bed_1}
    # {% endif %}


##########################################################################################################

[gcode_macro set_calibration_temperature]
gcode:
    {% set afcvars = printer["gcode_macro AFC_VARS"] %}
    {% set tool = params.T|default(3)|int %}
    {% set wait = params.R|default(3)|int %}
    {% set temp0 = printer["gcode_macro read_materials"].material_0 %}
    {% set temp1 = printer["gcode_macro read_materials"].material_1 %}
    {% if tool == 0 and wait == 0 %}
        M104 T0 S{temp0}
    {% elif tool == 0 and wait == 1 %}
        M109 T0 S{temp0}
    {% elif tool == 1 and wait == 0 %}
        M104 T1 S{temp1}
    {% else %}
        M109 T1 S{temp1}
    {% endif %}

##########################################################################################################

[gcode_macro set_bed_temperature]
gcode:
    {% set tempvars = printer["gcode_macro read_materials"] %}
    {% set temp0 = printer["gcode_macro read_materials"].bed_temp_0 %}
    {% set temp1 = printer["gcode_macro read_materials"].bed_temp_1 %}
    {% if tempvars.bed_temp_0 >= tempvars.bed_temp_1 %}
        M140 S{temp0}
    {% elif tempvars.bed_temp_0 < tempvars.bed_temp_1 %}
        M140 S{temp1}
    {% else %}
        M140 S80
    {% endif %}


[exclude_object]

[delayed_gcode idex_offset_save]
gcode = 
	{% set svv = printer.save_variables.variables %}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=offset_x VALUE={svv.offset_x}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=offset_y VALUE={svv.offset_y}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=offset_z VALUE={svv.offset_z}
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=y_scrub VALUE={svv.y_scrub}   ### Verificar se este parâmetro está sendo usado e apagar se não estiver
	SAVE_VARIABLE VARIABLE=active_carriage VALUE=0
	read_materials
	SAVE_GCODE_STATE NAME=DEFAULT
initial_duration = 1.0

[gcode_arcs]
resolution = 0.2

[input_shaper]
shaper_freq_x = 79.8  # frequency for the X mark of the test model
shaper_type_x = mzv
shaper_freq_y = 32.2  # frequency for the Y mark of the test model
shaper_type_y = zv

[stepper_x]
step_pin = PE2
dir_pin = PB4
enable_pin = !PC11
microsteps = 64
rotation_distance = 40
endstop_pin = ^PF4 # tmc2240_stepper_x:virtual_endstop
position_endstop = -16.5
position_min = -19.5
position_max = 282
homing_speed = 75
homing_retract_dist = 5.0
homing_retract_speed = 20
second_homing_speed = 15

[tmc2240 stepper_x]
#cs_pin: PC10
#spi_software_miso_pin: PA6
#spi_software_mosi_pin: PA7
#spi_software_sclk_pin: PA5
cs_pin = PC10
spi_bus = spi1
spi_speed= 3500000
run_current = 0.849
interpolate = False
stealthchop_threshold = 0
#diag0_pin = ^!PF3
#driver_SGT = 2

[dual_carriage]
axis = x
step_pin = PF12
dir_pin = PF11
enable_pin = !PB3
microsteps = 64
rotation_distance = 40
endstop_pin = ^PF3 # tmc2240_dual_carriage:virtual_endstop
position_endstop = 325
position_min = 25
position_max = 326
homing_speed = 75
homing_retract_dist = 5.0
homing_retract_speed = 20
second_homing_speed = 15

[tmc2240 dual_carriage]
cs_pin = PF13
spi_bus = spi1
spi_speed= 3500000
run_current = 0.849
interpolate = False
#diag0_pin = ^!PF4
#driver_SGT = 3

[stepper_y]
step_pin = PD7
dir_pin = !PD6
enable_pin = !PF10
microsteps = 64
rotation_distance = 40
endstop_pin = ^PF5 #tmc2240_stepper_y:virtual_endstop
position_endstop = 301
position_min = -3
position_max = 303
homing_speed = 75
homing_retract_dist = 5.0
homing_retract_speed = 20
second_homing_speed = 15

[tmc2240 stepper_y]
cs_pin = PF9
spi_bus = spi1
spi_speed= 3500000
run_current = 1
interpolate = False
#diag0_pin = ^!PF5 # use the same pin that was previously the endstop_pin!
#driver_SGT = 4

[stepper_z]
step_pin = PD3
dir_pin = PD2
enable_pin = !PD5
rotation_distance = 8
endstop_pin = tmc2240_stepper_z:virtual_endstop #^PC0
microsteps = 128
position_endstop = 340.5
position_min = -3.5
position_max = 345
homing_speed = 12.0
homing_retract_dist = 0 # 5.0

[tmc2240 stepper_z]
cs_pin = PD4
spi_bus = spi1
spi_speed= 3500000
run_current = 0.700
interpolate = False
diag0_pin = ^!PC0 # use the same pin that was previously the endstop_pin!
driver_SGT = 2


[stepper_z1]
step_pin = PC9
dir_pin = PC8
enable_pin = !PD1
rotation_distance = 8
microsteps = 128

[tmc2240 stepper_z1]
cs_pin = PD0
spi_bus = spi1
spi_speed= 3500000
run_current = 0.700
interpolate = False

[extruder]
step_pin = PA10
dir_pin = !PA14
enable_pin = !PA15
full_steps_per_rotation = 200
rotation_distance = 32.250 #<- Bondtech 		###  V.Feeder->30.850   V.Arc->28.90
microsteps = 32
step_pulse_duration = 0.000000100
gear_ratio = 33:11
pressure_advance = 0.0
pressure_advance_smooth_time = 0.04
nozzle_diameter = 0.400
filament_diameter = 2.850
heater_pin = PE3 # HE0
sensor_pin = PA1 # T0
sensor_type = PT1000
pullup_resistor = 2200
max_power = 1.0
smooth_time = 1.0
control = pid
pid_kp = 13.948
pid_ki = 0.992
pid_kd = 88.663
pwm_cycle_time = 0.1
max_extrude_only_distance = 1200.0
max_extrude_cross_section = 50
max_extrude_only_velocity = 45
max_extrude_only_accel = 5000
instantaneous_corner_velocity = 1.000
min_extrude_temp = 0
min_temp = 0
max_temp = 360

[tmc2240 extruder]
cs_pin = PF8
spi_bus = spi1
spi_speed= 3500000
run_current = 1.1
interpolate = False

[heater_fan fan1]
pin = PE6
hardware_pwm = False
cycle_time = 0.00004
max_power = 1
shutdown_speed = 0
heater = extruder
heater_temp = 50.0
fan_speed = 1.0

[fan_generic fanX1]
pin = PE0
cycle_time = 0.0100
kick_start_time = 1.00
hardware_pwm = false

[extruder1]
step_pin = PD11
dir_pin = PD9
enable_pin = !PD15
heater_pin = PB5 # HE1
sensor_pin = PA2 # T1
full_steps_per_rotation = 200
rotation_distance = 32.250 #<- Bondtech 		###  V.Feeder->30.850   V.Arc->28.90
microsteps = 32
step_pulse_duration = 0.000000100
gear_ratio = 33:11
pressure_advance = 0.0
pressure_advance_smooth_time = 0.04
nozzle_diameter = 0.400
filament_diameter = 2.850
sensor_type = PT1000
pullup_resistor = 2200
max_power = 1.0
smooth_time = 1.0
control = pid
pid_kp = 13.948
pid_ki = 0.992
pid_kd = 88.663
pwm_cycle_time = 0.1
max_extrude_only_distance = 1200.0
max_extrude_cross_section = 50
max_extrude_only_velocity = 45
max_extrude_only_accel = 5000
instantaneous_corner_velocity = 1.000
min_extrude_temp = 0
min_temp = 0
max_temp = 360

[tmc2240 extruder1]
cs_pin = PD14
spi_bus = spi1
spi_speed= 3500000
run_current = 1.1
interpolate = False

[heater_fan fan2]
pin = PC12
hardware_pwm = False
cycle_time = 0.00004
max_power = 1
shutdown_speed = 0
heater = extruder1
heater_temp = 50.0
fan_speed = 1.0

[fan_generic fanX2]
pin = PE5
cycle_time = 0.0100
kick_start_time = 1.00
hardware_pwm = false

[heater_bed]
heater_pin = PB7
sensor_pin = PA0 # TB
sensor_type = Generic 3950
control = pid
pid_kp = 16.040
pid_ki = 0.342
pid_kd = 188.273
max_power = 0.5
min_temp = 0
max_temp = 165

[controller_fan controller_fan]
pin = PE1
max_power = 1.0
shutdown_speed = 0
cycle_time = 0.010
hardware_pwm = False
kick_start_time = 0.1
off_below = 0.0
fan_speed = 1.0
idle_timeout = 50
idle_speed = 1.0
heater = extruder

[fan_generic air_flow_fan]
pin = PB8
tachometer_pin = PC14
max_power = 1.0
shutdown_speed = 0
cycle_time = 0.00004
hardware_pwm = False
kick_start_time = 0.2
off_below = 0.2

[temperature_sensor chamber_fan]
sensor_type = Generic 3950
sensor_pin = PA3
pullup_resistor = 4700
min_temp = 0
max_temp = 70

[output_pin case_light]
pin = PE4
pwm = True
value = 0.5
cycle_time = 0.001

[neopixel progress_leds]
pin = rp2040:gpio18
chain_count = 37
initial_red = 1.0
initial_green = 1.0
initial_blue = 1.0

[neopixel heater_leds]
pin = rp2040:gpio20    #PA9
chain_count = 2
initial_red = 1.0
initial_green = 1.0
initial_blue = 1.0

[neopixel heater_leds2]
pin = rp2040:gpio19   #PB15
chain_count = 2
initial_red = 1.0
initial_green = 1.0
initial_blue = 1.0

[output_pin rp2040_led]
pin = rp2040:gpio25
value = 1

[printer]
kinematics = cartesian
max_velocity = 500
max_accel = 7000
minimum_cruise_ratio = 0.5	#max_accel_to_decel = 7000
max_z_velocity = 25
max_z_accel = 200
square_corner_velocity = 12.0

[board_pins]
aliases = 
	EXP1_1=PE9, EXP1_2=PE10,
	EXP1_3=PE11, EXP1_4=PE12,
	EXP1_5=PE13, EXP1_6=PE14,    # Slot in the socket on this side
	EXP1_7=PE15, EXP1_8=PB10,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	EXP2_1=PB14, EXP2_2=PB13,
	EXP2_3=PF7, EXP2_4=PB12,
	EXP2_5=PE7, EXP2_6=PB11,      # Slot in the socket on this side
	EXP2_7=PE8, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=PC5

[probe]
pin = rp2040:gpio16  #PC13
speed = 3.0	#Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
samples = 3
sample_retract_dist = 0.5
lift_speed = 10
samples_result = average
samples_tolerance = 0.135
samples_tolerance_retries = 1

